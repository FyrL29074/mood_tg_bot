services:
  api:
    build:
      context: .
      dockerfile: build/Dockerfile.api
    environment:
      - TELEGRAM_BASE_URL_WITH_TOKEN=${TELEGRAM_BASE_URL_WITH_TOKEN}
    volumes:
      - ./.env:/app/.env:ro
    ports:
      - "8080:50052"
    networks:
      - moodnet
    depends_on:
      - kafka
    deploy:
      resources:
        limits:
          memory: 256M
    mem_limit: 256m

  notification:
    build:
      context: .
      dockerfile: build/Dockerfile.notification
    networks:
      - moodnet
    deploy:
      resources:
        limits:
          memory: 256M
    mem_limit: 256m

  storage:
    build:
      context: .
      dockerfile: build/Dockerfile.storage
    ports:
      - "8081:50051"
    networks:
      - moodnet
    depends_on:
      - kafka
    volumes:
      - ./storage_data:/app/data
    deploy:
      resources:
        limits:
          memory: 256M
    mem_limit: 256m

  kafka:
    image: bitnami/kafka:latest
    restart: always
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    ports:
      - "9092:9092"
    networks:
      - moodnet



networks:
  moodnet:
    driver: bridge
